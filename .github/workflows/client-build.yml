name: SST CI/CD

on:
  push:
    branches:
      - adam/gha-artifact

jobs:
  sst-build-client:
    runs-on: ubuntu-latest

    defaults:
      run:
          working-directory: client
    # environment: 
    #   name: production
           
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache NPM dependencies
        uses: actions/cache@v3
        with:
          path: .npm
          key: ${{ runner.OS }}-node-${{ hashFiles('client/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '20.3.0'
      - run: npm i --cache .npm --prefer-offline
      # - run: npm test 
      - name: Archive production build
        run: npx sst build
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: sst-build
          path: |
            .sst/**/*
            package.json
            package-lock.json

  sst-deploy-client:
    runs-on: ubuntu-latest
    needs: sst-build-client

    defaults:
      run:
          working-directory: client
    # environment: 
    #   name: production
           
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: sst-build
          path: .sst/

      - name: Cache NPM dependencies
        uses: actions/cache@v3
        with:
          path: .npm
          key: ${{ runner.OS }}-node-${{ hashFiles('client/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '20.3.0'
      - run: npm i --cache .npm --prefer-offline
      # - run: npm test 
      - name: Deploy to production environment
        run: npx sst deploy --stage dev --yes
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

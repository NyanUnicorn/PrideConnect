name: GoLang CI/CD

on:
  push:
    branches:
      - main

jobs:
  build-server:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: server

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Cache Go modules
        uses: actions/setup-go@v4
        with:
          go-version: "1.20.5"
          check-latest: true
      # - name: Build mod
      #   run: go mod init "/home/runner/work/PrideConnect/PrideConnect"
      - name: Test
        run: go test
      - name: Build
        run: go build -o ./dist/server

      # - name: Run tests
      #   run: go test -v ./...

  build-client:
    runs-on: ubuntu-latest

    defaults:
      run:
          working-directory: client
           
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '20.3.0'
      - run: npm i
      # - run: npm test 

  deploy:
    needs: build-client
    runs-on: ubuntu-latest

    defaults:
      run:
          working-directory: client

    steps:
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '20.3.0'
      - name: Deploy to production environment
        run: |
          npm i
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          # Add your deployment script or commands here
          # echo "Deploying to staging environment"
          # Example: Deploy to a cloud platform like AWS or Heroku

  # deploy_production:
  #   needs: deploy
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Deploy to production environment
  #       run: |
  #         # Add your deployment script or commands here
  #         echo "Deploying to production environment"
  #         # Example: Deploy to a cloud platform like AWS or Heroku
